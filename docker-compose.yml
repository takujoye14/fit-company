version: "3.7"
services:
  monolith:
    build:
      context: .
      dockerfile: monolith.Dockerfile
    ports:
      - "12101:5000"
    volumes:
      - ./src/fit:/app/src/fit
    links:
      - monolith-db
      - rabbitmq
    environment:
      - DATABASE_URL=postgresql://postgres:docker@monolith-db:5432/fit-db
      - FIT_API_KEY=some_very_secret_key
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=docker
    networks:
      - fit
    # entrypoint: ["flask", "run"]
    depends_on:
      rabbitmq:
        condition: service_healthy
      monolith-db:
        condition: service_healthy

  coach:
    build:
      context: .
      dockerfile: coach.Dockerfile
    ports:
      - "12102:5000"
    volumes:
      - ./src/coach:/app/src/coach
    links:
      - coach-db
    environment:
      - MONOLITH_URL=http://monolith:5000
      - FIT_API_KEY=some_very_secret_key
      - DATABASE_URL=postgresql://postgres:docker@coach-db:5432/coach-db
    networks:
      - fit

  monolith-db:
    image: postgres:latest
    ports:
      - "12100:5432"
    command: postgres -c max_connections=200
    user: postgres
    environment:
      - POSTGRES_DB=fit-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "fit-db"]
      interval: 5s
      timeout: 30s
      retries: 5
    networks:
      - fit

  coach-db:
    image: postgres:latest
    ports:
      - "12103:5432"
    command: postgres -c max_connections=200
    user: postgres
    environment:
      - POSTGRES_DB=coach-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "coach-db"]
      interval: 5s
      timeout: 30s
      retries: 5
    networks:
      - fit

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "12104:5672" # AMQP protocol port
      - "12105:15672" # Management interface port
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=docker
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 30s
      retries: 12
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - fit

  coach-consumer:
    build:
      context: .
      dockerfile: coach.Dockerfile
    command: ["python", "-m", "src.coach.wod_consumer"]
    depends_on:
      - rabbitmq
      - coach-db
      - monolith
    volumes:
      - ./src/coach:/app/src/coach
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=docker
      - DATABASE_URL=postgresql://postgres:docker@coach-db:5432/coach-db
      - MONOLITH_URL=http://monolith:5000
      - FIT_API_KEY=some_very_secret_key
    dns:
      - 8.8.8.8
      - 1.1.1.1
    networks:
      - fit
    restart: on-failure

  monolith-cron:
    build:
      context: .
      dockerfile: monolith.Dockerfile
    command: ["python", "/app/src/fit/cron_job.py"]
    environment:
      - MONOLITH_URL=http://monolith:5000
      - FIT_API_KEY=some_very_secret_key
    networks:
      - fit
    depends_on:
      monolith:
        condition: service_healthy

    

volumes:
  rabbitmq_data:
    driver: local

networks:
  fit:
    driver: bridge